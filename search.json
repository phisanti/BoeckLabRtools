[{"path":"https://phisanti.github.io/BoeckLabRtools/articles/base_analysis.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Introduction to BoeckLabRtools","text":"BoeckLabRtools package provides utilities analyzing data experiments Boeck Lab. vignette demonstrates common workflow: analyzing ASCT (Automated Single-Cell Tracking) killcurves determine antimicrobial efficacy. ASCT killcurves track cell death time monitoring uptake propidium iodide (PI), fluorescent dye penetrates dead cells. resulting data allows us calculate area curve (AUC) measure antimicrobial effectiveness.","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/articles/base_analysis.html","id":"example-analysis-of-asct-killcurves-generated-with-our-pipelines","dir":"Articles","previous_headings":"","what":"Example analysis of ASCT killcurves generated with our pipelines","title":"Introduction to BoeckLabRtools","text":"goal exercise show generate kill curves calculate AUC raw output ASCT python pipeline. exercise, use example data ported package. data subset data generated Mrs Sara Topra, former master student lab. first step load basic libraries data data data.table following columns: colnames(d) - file: Character vector representing file name - frame: Integer vector representing frame number - channel: Integer vector representing channel number - date_time: POSIXct vector date time frame - timestep: Numeric vector representing time step start experiment - object_class: Character vector representing object class (single-cell, noise, -focus, clump) - total_count: Integer vector total count objects given class - pi_class_neg: Integer vector PI negative class count - pi_class_pos: Integer vector PI positive class count - area_pineg: Numeric vector total area PI negative objects - area_pipos: Integer vector total area PI positive objects Next, try extract well field information stored filenaming pattern. , use tstrsplit function data.table package. tstrsplit function powerful function allows us split strings based regular expression pattern. case, split file name based underscore character (_). keep argument used keep second fourth elements split. result stored well field columns.","code":"library(BoeckLabRtools) library(data.table) library(ggplot2) library(magrittr) d <- data.table::as.data.table(BoeckLabRtools::killcurves) d[, c(\"well\", \"field\") := tstrsplit(file, \"_\", keep = c(2, 4))] d[, c(\"row\", \"col\") := data.table::tstrsplit(well, \"(?<=\\\\D)(?=\\\\d)\", perl = TRUE)] d[, col := as.integer(col)]"},{"path":"https://phisanti.github.io/BoeckLabRtools/articles/base_analysis.html","id":"filling-missing-classes","dir":"Articles","previous_headings":"Example analysis of ASCT killcurves generated with our pipelines","what":"Filling Missing Classes","title":"Introduction to BoeckLabRtools","text":"next step fill missing classes. due fact segmentation classification algorithm sometimes find object class particular frame. normal, objects every frame can cause problems downstream. fill_missing_classes function helper function fills counts missing classes 0 values. key_cols argument character vector columns used group data. fill_col argument column filled. cols_0count argument character vector columns filled zeros. required_values argument character vector unique values used fill missing classes. Now, given fact inputed rows, also need fill data_time timestep (maybe columns), instead filling 0, fill unique time frame file. take 2 value first value NA .","code":"d <- fill_missing_classes(   dt = d,   key_cols = c(\"file\", \"frame\", \"row\", \"col\", \"well\", \"field\"),   fill_col = \"object_class\",   cols_0count = c(\"total_count\", \"pi_class_neg\", \"pi_class_pos\", \"area_pineg\", \"area_pipos\"),   required_values = unique(d$object_class) ) fill_cols_uniq_val <- c(\"date_time\", \"timestep\") d[, (fill_cols_uniq_val) := lapply(.SD, function(x) fifelse(is.na(x), unique(x)[2], x)),   .SDcols = fill_cols_uniq_val,    by = .(file, frame)]"},{"path":"https://phisanti.github.io/BoeckLabRtools/articles/base_analysis.html","id":"adding-treatment-information","dir":"Articles","previous_headings":"Example analysis of ASCT killcurves generated with our pipelines","what":"Adding Treatment Information","title":"Introduction to BoeckLabRtools","text":"Plate Schema Treatment Information , can use add_well_info function include drug info data table. example, use already example plate schema, can add data directly file","code":"d <- add_well_info(d,                     plate_schema, # In your case plate schema can be a path to the file                    info_name = \"treatment\",                    plate_format = \"plate_view\"                    )"},{"path":"https://phisanti.github.io/BoeckLabRtools/articles/base_analysis.html","id":"calculating-live-cell-fraction","dir":"Articles","previous_headings":"Example analysis of ASCT killcurves generated with our pipelines","what":"Calculating Live Cell Fraction","title":"Introduction to BoeckLabRtools","text":"point, can proceed calculate relative live fraction. , focus single-cell objects divide counts PI cells total number single-cells (PI + PI single cell). , give us fraction PI positive cells (dead cells). live fraction calculated 1 - PI fraction.","code":"d[, valid_cell := data.table::fifelse(object_class %in% c('single-cell'), TRUE, FALSE)] d_sc <- d[object_class == \"single-cell\"] d_sc[, pi_frac := pi_class_pos/total_count,          by = .(file, valid_cell, frame, object_class)] d_sc[, live_frac := 1 - pi_frac]"},{"path":"https://phisanti.github.io/BoeckLabRtools/articles/base_analysis.html","id":"interpolating-time-points","dir":"Articles","previous_headings":"Example analysis of ASCT killcurves generated with our pipelines","what":"Interpolating Time Points","title":"Introduction to BoeckLabRtools","text":"Finally, need get time point frames. large experiments, common shift ranging minutes hours wells scanned early loop later wells. correct , use interpolate_variable function. function interpolates variable interest (case, live fraction) time points interest calculating linear mid-point two given points. timepoints argument time points want interpolate. can set plain regular intervals, vector timepoints interest (0, 6, 12, 24â€¦). fill_extremes argument used fill first last time points first last values variable interest. return_time argument used return time points interest, want interpolate one variable, can set FALSE subsequent calls. result stored interpol_time interpol_live_frac columns. Note use = order denote interpolate live fraction file. , also important consider use enforce_decrease order make sure live fraction always decreasing. point, kill curves! need plot . Depending size dataset, can simple grouped plot panel many conditions, might need filter data.","code":"d_sc[, c(\"interpol_time\", \"interpol_live_frac\") := interpolate_variable(time = timestep,                                                                       values = live_frac,                                                                       timepoints = c(0, 3, 6, 9, 12),                                                                       fill_extremes = TRUE,                                                                       return_time = TRUE),           by = .(file)]  d_sc[, interpol_live_frac := enforce_decrease(interpol_live_frac),    by = .(file)]"},{"path":"https://phisanti.github.io/BoeckLabRtools/articles/base_analysis.html","id":"visualizing-the-kill-curves","dir":"Articles","previous_headings":"Example analysis of ASCT killcurves generated with our pipelines","what":"Visualizing the Kill Curves","title":"Introduction to BoeckLabRtools","text":"","code":"# plot d_sc %>%   ggplot(., aes(x = timestep, y =live_frac, group = file)) +   geom_point(aes(col = well), show.legend = FALSE) +   facet_wrap(treatment ~ .) +   theme_BoeckLab()"},{"path":"https://phisanti.github.io/BoeckLabRtools/articles/base_analysis.html","id":"calculating-area-under-the-curve-auc","dir":"Articles","previous_headings":"Example analysis of ASCT killcurves generated with our pipelines","what":"Calculating Area Under the Curve (AUC)","title":"Introduction to BoeckLabRtools","text":"analysis, can compress data single value. , can calculate area curve (AUC) well. calculate_AUC function calculates AUC well. key_cols argument character vector columns used group data. value_col argument column used calculate AUC. time_col argument column used x-axis. result stored AUC column. case, group many variables need using = argument.","code":"auc_data <- d_sc[, .(auc = calc_auc(x = interpol_time, y = interpol_live_frac)),                by = .(file, well, field, row, col, treatment)]"},{"path":"https://phisanti.github.io/BoeckLabRtools/articles/base_analysis.html","id":"summarizing-results-by-treatment","dir":"Articles","previous_headings":"Example analysis of ASCT killcurves generated with our pipelines","what":"Summarizing Results by Treatment","title":"Introduction to BoeckLabRtools","text":"last example figure, can make bar plot error bars AUC treatment:","code":"auc_data %>%   .[, .(auc = mean(auc), sd_auc = sd(auc)),      by = .(treatment)] %>%   ggplot(., aes(x = treatment, y = auc, fill = treatment)) +   geom_bar(stat = \"identity\", position = \"dodge\") +   geom_errorbar(aes(ymin = auc - sd_auc, ymax = auc + sd_auc),                  position = position_dodge(width = 0.9), width = 0.25) +   theme_BoeckLab()"},{"path":"https://phisanti.github.io/BoeckLabRtools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"First Last. Author, maintainer.","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Last F (2025). BoeckLabRtools: Boeck Lab R Tools. R package version 0.0.4.1, https://phisanti.github.io/BoeckLabRtools/.","code":"@Manual{,   title = {BoeckLabRtools: Boeck Lab R Tools},   author = {First Last},   year = {2025},   note = {R package version 0.0.4.1},   url = {https://phisanti.github.io/BoeckLabRtools/}, }"},{"path":[]},{"path":"https://phisanti.github.io/BoeckLabRtools/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Boeck Lab R Tools","text":"Welcome Boeck Lab R Tools repository! R package designed provide collection useful functions tools streamline enhance data analysis pipelines frequently used Boeck Lab. lab focuses various aspects microbiology antimicrobial research, package aims facilitate analysis data generated experiments, particularly involving Antimicrobial Single-Cell Testing (ASCT).","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/index.html","id":"purpose","dir":"","previous_headings":"","what":"Purpose","title":"Boeck Lab R Tools","text":"primary purpose package offer suite tools can easily integrated data analysis workflows Boeck Lab. tools specifically tailored handle unique requirements research, including quality control (QC) kill curve kinetics analysis. providing functions centralized package, aim improve efficiency, reproducibility, accuracy data analysis processes.","code":""},{"path":[]},{"path":"https://phisanti.github.io/BoeckLabRtools/index.html","id":"quality-control-tools","dir":"","previous_headings":"Features","what":"Quality Control Tools","title":"Boeck Lab R Tools","text":"Quality control critical step data analysis pipeline. Ensuring accuracy reliability data proceeding analysis essential. Boeck Lab R Tools package includes several QC functions designed help identify correct potential issues data. key QC features include: Object Class Distribution Plots: Visualize spatial distribution object classes across plate initial time point (t0). helps identifying patterns anomalies object distribution. Growth Plot: Provides overview growth patterns observed across wells throughout experiment. growth ratio calculated well log-transformed better visualization. Consistency Plot: Demonstrates consistency classification bright field across different conditions. plot faceted object class, allowing comparison classification consistency across different types objects. PI Consistency Plot: Visualizes consistency Propidium Iodide (PI) classification across different wells time points, focusing single-cell objects. Time Delay Plot: Illustrates time delays observed imaging first frame across plate.","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/index.html","id":"kill-curve-kinetics-tools","dir":"","previous_headings":"Features","what":"Kill Curve Kinetics Tools","title":"Boeck Lab R Tools","text":"Kill curve kinetics analysis crucial aspect research, particularly context antimicrobial testing. Boeck Lab R Tools package includes functions facilitate analysis kill curve data, allowing detailed understanding antimicrobial efficacy. Key features include: Interpolate Variable: Interpolates variable based given time points values, handling regular irregular time steps, filling extreme values, returning interpolated time points desired. Calculate AUC (Area Curve): Calculates AUC using trapezoidal rule, options interpolation normalization. Enforce Monotonic Decrease: Ensures values numeric vector decrease monotonically, particularly useful live/death fraction data. Extrapolate T0 Data: Extrapolates correct T0 given plate well data, accounting time lags imaging start times across wells.","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Boeck Lab R Tools","text":"install Boeck Lab R Tools package, can use following commands R:","code":"# Install remotes if not already installed if (!requireNamespace(\"remotes\", quietly = TRUE)) {   install.packages(\"remotes\") }  # Install the Boeck Lab R Tools package from GitHub remotes::install_github(\"phisanti/BoeckLabRtools\")"},{"path":"https://phisanti.github.io/BoeckLabRtools/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Boeck Lab R Tools","text":"welcome contributions community help improve expand functionality Boeck Lab R Tools package. suggestions, bug reports, like contribute code, please feel free open issue submit pull request GitHub repository.","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Boeck Lab R Tools","text":"package licensed GPL (>= 3) license. See LICENSE file details.","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Boeck Lab R Tools","text":"like thank members Boeck Lab valuable input feedback development package. Special thanks Santiago Cano-Muniz leading development efforts.","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/index.html","id":"contact","dir":"","previous_headings":"","what":"Contact","title":"Boeck Lab R Tools","text":"questions inquiries, please contact Santiago Cano-Muniz santiago.cano-muniz@unibas.ch. hope find Boeck Lab R Tools package useful research data analysis workflows. Happy analyzing!","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/add_well_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge plate information with well information â€” add_well_info","title":"Merge plate information with well information â€” add_well_info","text":"function designed add well-specific information plate experiments (e.g., 96-well, 384-well, 1536-well plates) data. merges dataset containing plate data well information based specified plate format. function provides flexible way integrate metadata plate wells (drug types, concentrations, experimental conditions) plate measurement data.","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/add_well_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge plate information with well information â€” add_well_info","text":"","code":"add_well_info(   d,   well_info,   info_name = \"well_info\",   plate_format = \"plate_view\",   wells_to_ignore = c(\"EMPTY\", \"BW\"),   force_lower = TRUE,   inplace = TRUE )"},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/add_well_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge plate information with well information â€” add_well_info","text":"d data.table path csv containing well information. must columns named \"row\", \"col\", \"well\" (lowercase). well_info data.frame, data.table path csv containing well information. format depends plate_format argument. info_name character string specifying name column containing well information. Default \"well_info\". plate_format character string specifying format well information. Can either \"plate_view\" (default) \"transposed\". wells_to_ignore character vector specifying wells ignore. Default c(\"EMPTY\", \"BW\"). force_lower logical value indicating whether force column names lowercase. Default TRUE. inplace logical value indicating whether modify input data.table place. Default TRUE. means data.table given input directly modified without using assignment operator '<-'.","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/add_well_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge plate information with well information â€” add_well_info","text":"data.table merged drug data well information.","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/add_well_info.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Merge plate information with well information â€” add_well_info","text":"function requires consistent mapping row/col/well coordinates metadata file target data. coordinates must use labeling scheme datasets proper merging. example, plate uses rows -H columns 1-12 (96-well plate), datasets follow labeling pattern. using default 'plate_view' format, input well_info data visually resemble physical plate layout: first column must labeled \"row\" contain row identifiers (e.g., , B, C, etc.) subsequent columns must numeric represent column numbers (e.g., 1, 2, 3, etc.) cell values contain information merged (e.g., drug names, concentrations) example, 96-well plate metadata might look like: row | 1      | 2      | 3      | ... | 12 â€”-+â€”â€”â€“+â€”â€”â€“+â€”â€”â€“+â€”â€“+â€”â€”â€“   | Drug1  | Drug2  | Ctrl   | ... | Drug6 B   | Drug1  | Drug2  | Ctrl   | ... | Drug6 ... H   | Drug7  | Drug8  | Blank  | ... | Blank Alternatively, 'transposed' format can used metadata structured tabular form columns row, col, information.","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/add_well_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge plate information with well information â€” add_well_info","text":"","code":"# Example data library(data.table) library(BoeckLabRtools) d <- read.table(text = \" row | col | well | value A   | 1   | A1   | 10 A   | 2   | A2   | 20 B   | 1   | B1   | 30 B   | 2   | B2   | 40\",  header = TRUE, sep = \"|\", stringsAsFactors = FALSE, strip.white = TRUE) d <- data.table(d) well_info <- read.table(text = \" row | 1     | 2 A   | Drug1 | Drug2 B   | Drug3 | Drug4\",  header = TRUE, sep = \"|\", stringsAsFactors = FALSE, strip.white = TRUE) well_info <- data.table::data.table(well_info) # Merge drug data with well information merged_data <- add_well_info(d, well_info) #> Warning: NAs introduced by coercion # Merge drug data with transposed well information well_info_transposed <- read.table(text = \" col | row | info 1   | A | Drug1 2   | B | Drug2 1   | A | Drug3 2   | B | Drug4\",  header = TRUE, sep = \"|\", stringsAsFactors = FALSE, strip.white = TRUE) well_info_transposed <- data.table::data.table(well_info_transposed) well_info_transposed[, well := paste0(row, col)] #>      col    row   info   well #>    <int> <char> <char> <char> #> 1:     1      A  Drug1     A1 #> 2:     2      B  Drug2     B2 #> 3:     1      A  Drug3     A1 #> 4:     2      B  Drug4     B2 merged_data_transposed <- add_well_info(d, well_info_transposed, plate_format = \"transposed\")"},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/calc_auc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Area Under the Curve (AUC) â€” calc_auc","title":"Calculate the Area Under the Curve (AUC) â€” calc_auc","text":"function calculates Area Curve (AUC) using trapezoidal rule. can interpolate input data specified number steps normalize result 1.","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/calc_auc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Area Under the Curve (AUC) â€” calc_auc","text":"","code":"calc_auc(y, x, steps = NULL, norm_to_1 = TRUE)"},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/calc_auc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Area Under the Curve (AUC) â€” calc_auc","text":"y Numeric vector y-values. x Numeric vector x-values. steps Optional. Number steps interpolate data. NULL, interpolation performed. norm_to_1 Logical. TRUE (default), calculated AUC normalized 1.","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/calc_auc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Area Under the Curve (AUC) â€” calc_auc","text":"calculated Area Curve (AUC).","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/calc_auc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the Area Under the Curve (AUC) â€” calc_auc","text":"","code":"# Basic usage library(BoeckLabRtools) x <- c(0, 1, 2, 3, 4, 5) y <- c(0, 1, 2, 3, 4, 5) calc_auc(y, x) #> [1] 2.5  # With interpolation x <- c(0, 2, 4) y <- c(0, 2, 4) calc_auc(y, x, steps = 100) #> [1] 2  # Without normalization x <- c(0, 1, 2, 3, 4, 5) y <- c(0, 1, 2, 3, 4, 5) calc_auc(y, x, norm_to_1 = FALSE) #> [1] 12.5"},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/combine_summaries.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine summary files within a single directory â€” combine_summaries","title":"Combine summary files within a single directory â€” combine_summaries","text":"function searches files matching specified pattern provided directory path, reads data file, adds 'file' column base name file, combines data single data.table. combined data written file specified prefix '_combined_summary.csv' suffix directory.","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/combine_summaries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine summary files within a single directory â€” combine_summaries","text":"","code":"combine_summaries(path, pattern = \"_summary.csv\", output_prefix = NULL)"},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/combine_summaries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine summary files within a single directory â€” combine_summaries","text":"path character string specifying directory path search summary files. pattern character string specifying pattern match summary files. Default '_summary.csv'. output_prefix character string specifying prefix added output file name. Default NULL (prefix).","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/combine_summary_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine summary files from multiple directories â€” combine_summary_files","title":"Combine summary files from multiple directories â€” combine_summary_files","text":"function applies combine_summaries function directory path provided results_file_paths.","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/combine_summary_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine summary files from multiple directories â€” combine_summary_files","text":"","code":"combine_summary_files(   results_file_paths,   pattern = \"_summary.csv\",   output_prefix = NULL,   parallel = FALSE,   cores = NULL )"},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/combine_summary_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine summary files from multiple directories â€” combine_summary_files","text":"results_file_paths character vector directory paths search summary files. pattern character string specifying pattern match summary files. Default '_summary.csv'. output_prefix character string specifying prefix added output file name. Default NULL (prefix). parallel logical value indicating whether use parallel processing. Default FALSE. cores integer specifying number cores use parallel processing. Default NULL (automatically determined).","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/combine_summary_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine summary files from multiple directories â€” combine_summary_files","text":"","code":"if (FALSE) { # \\dontrun{ results_dirs <- c(\"path/to/results1\", \"path/to/results2\") combine_summary_files(results_dirs, pattern = \"_summary.csv\", output_prefix = \"experiment_1\", parallel = TRUE, cores = 4) } # }"},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/create_consistency_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Consistency Plot â€” create_consistency_plot","title":"Create Consistency Plot â€” create_consistency_plot","text":"function generates heatmap demonstrating consistency classification bright field across different conditions. well object class, linear regression model fitted object count time. slope model, normalized initial count expressed percentage, represents rate change classification. plot faceted object class, allowing comparison classification consistency across different types objects.","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/create_consistency_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Consistency Plot â€” create_consistency_plot","text":"","code":"create_consistency_plot(d)"},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/create_consistency_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Consistency Plot â€” create_consistency_plot","text":"d data.table containing data plotted. columns 'well', 'object_class', 'total_count', 'frame', 'row', 'col'.","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/create_consistency_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Consistency Plot â€” create_consistency_plot","text":"heatmap showing classification consistency across plate, faceted object class.","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/create_growth_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Growth Plot â€” create_growth_plot","title":"Create Growth Plot â€” create_growth_plot","text":"function generates heatmap providing comprehensive overview growth patterns observed across wells throughout experiment. growth ratio calculated well computing ratio maximum total area minimum total area across time points. growth ratio log-transformed better visualize wide range growth patterns.","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/create_growth_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Growth Plot â€” create_growth_plot","text":"","code":"create_growth_plot(d)"},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/create_growth_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Growth Plot â€” create_growth_plot","text":"d data.table containing data plotted. columns 'well', 'frame', 'area_pineg', 'area_pipos', 'row', 'col'.","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/create_growth_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Growth Plot â€” create_growth_plot","text":"heatmap showing growth approximation across plate.","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/create_object_class_plots.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Object Class Distribution Plots â€” create_object_class_plots","title":"Create Object Class Distribution Plots â€” create_object_class_plots","text":"function generates grid heatmaps visualizing spatial distribution object classes across plate initial time point (t0). visualization aggregates data summing counts object class across fields within well.","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/create_object_class_plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Object Class Distribution Plots â€” create_object_class_plots","text":"","code":"create_object_class_plots(d)"},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/create_object_class_plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Object Class Distribution Plots â€” create_object_class_plots","text":"d data.table containing data plotted. columns 'frame', 'row', 'col', 'object_class', 'total_count'.","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/create_object_class_plots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Object Class Distribution Plots â€” create_object_class_plots","text":"grid heatmaps showing object class distribution t0.","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/create_pi_consistency_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create PI Consistency Plot â€” create_pi_consistency_plot","title":"Create PI Consistency Plot â€” create_pi_consistency_plot","text":"function generates heatmap visualizing consistency Propidium Iodide (PI) classification across different wells time points, focusing single-cell objects. well, frame, object class, fraction PI-positive cells calculated. complement PI fraction represents live cell fraction. standard deviation live fraction across time points computed well, serving measure classification consistency time.","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/create_pi_consistency_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create PI Consistency Plot â€” create_pi_consistency_plot","text":"","code":"create_pi_consistency_plot(d)"},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/create_pi_consistency_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create PI Consistency Plot â€” create_pi_consistency_plot","text":"d data.table containing data plotted. columns 'file', 'well', 'frame', 'object_class', 'pi_class_pos', 'total_count', 'row', 'col'.","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/create_pi_consistency_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create PI Consistency Plot â€” create_pi_consistency_plot","text":"heatmap showing PI classification consistency across plate.","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/create_time_delay_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create PI Consistency Plot â€” create_time_delay_plot","title":"Create PI Consistency Plot â€” create_time_delay_plot","text":"function generates heatmap visualizing consistency Propidium Iodide (PI) classification across different wells time points, focusing single-cell objects. well, frame, object class, fraction PI-positive cells calculated. complement PI fraction represents live cell fraction. standard deviation live fraction across time points computed well, serving measure classification consistency time.","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/create_time_delay_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create PI Consistency Plot â€” create_time_delay_plot","text":"","code":"create_time_delay_plot(d)"},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/create_time_delay_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create PI Consistency Plot â€” create_time_delay_plot","text":"d data.table containing data plotted. columns 'file', 'well', 'frame', 'object_class', 'pi_class_pos', 'total_count', 'row', 'col'.","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/create_time_delay_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create PI Consistency Plot â€” create_time_delay_plot","text":"heatmap showing PI classification consistency across plate.","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/enforce_decrease.html","id":null,"dir":"Reference","previous_headings":"","what":"Enforce Monotonic Decrease in Values â€” enforce_decrease","title":"Enforce Monotonic Decrease in Values â€” enforce_decrease","text":"Corrects numeric vector ensure values decrease monotonically. Particularly useful live/death fraction data biological death can increase time (thus live fraction can decrease).","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/enforce_decrease.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enforce Monotonic Decrease in Values â€” enforce_decrease","text":"","code":"enforce_decrease(x)"},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/enforce_decrease.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enforce Monotonic Decrease in Values â€” enforce_decrease","text":"x Numeric vector values corrected","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/enforce_decrease.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enforce Monotonic Decrease in Values â€” enforce_decrease","text":"Numeric vector length input value less equal previous values","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/enforce_decrease.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Enforce Monotonic Decrease in Values â€” enforce_decrease","text":"","code":"x <- c(0.95, 0.92, 0.94, 0.90, 0.91) enforce_decrease(x) #> [1] 0.95 0.92 0.92 0.90 0.90 # Returns: c(0.95, 0.92, 0.92, 0.90, 0.90)"},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/extrapolate_t0_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Extrapolate T0 Data â€” extrapolate_t0_data","title":"Extrapolate T0 Data â€” extrapolate_t0_data","text":"function extrapolates correct T0 given plate well data, time 0 lagged due fact imaging starts earlier timepoint first wells later wells. extrapolates average values wells timepoint < min_t rest plate.","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/extrapolate_t0_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extrapolate T0 Data â€” extrapolate_t0_data","text":"","code":"extrapolate_t0_data(d, min_t, cols)"},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/extrapolate_t0_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extrapolate T0 Data â€” extrapolate_t0_data","text":"d data.table containing plate well data. min_t numeric value specifying minimum timepoint threshold. cols character vector specifying columns extrapolated.","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/extrapolate_t0_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extrapolate T0 Data â€” extrapolate_t0_data","text":"data.table extrapolated T0 data.","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/fill_missing_classes.html","id":null,"dir":"Reference","previous_headings":"","what":"Fill Missing Combinations in Data.Table â€” fill_missing_classes","title":"Fill Missing Combinations in Data.Table â€” fill_missing_classes","text":"function designed fill 0-count cases object classes missed certain conditions. Creates complete combinations specified key columns fills missing rows zeros count columns","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/fill_missing_classes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fill Missing Combinations in Data.Table â€” fill_missing_classes","text":"","code":"fill_missing_classes(dt, key_cols, fill_col, cols_0count, required_values)"},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/fill_missing_classes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fill Missing Combinations in Data.Table â€” fill_missing_classes","text":"dt data.table object containing source data key_cols Character vector column names use keys fill_col Character string specifying key column expand required values cols_0count Character vector column names filled zeros missing required_values Vector values must exist fill_col","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/fill_missing_classes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fill Missing Combinations in Data.Table â€” fill_missing_classes","text":"data.table complete combinations filled rows","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/fill_missing_classes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fill Missing Combinations in Data.Table â€” fill_missing_classes","text":"function ensures combinations key columns required values exist output. required_values must already present original dataset. Missing values cols_0count filled zeros.","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/fill_missing_classes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fill Missing Combinations in Data.Table â€” fill_missing_classes","text":"","code":"library(data.table) dt <- data.table(   file = c(\"video1\", \"video1\", \"video1\", \"video2\", \"video2\"),   frame = c(1, 2, 3, 1, 2),   object_class = c(\"car\", \"person\", \"car\", \"car\", \"bicycle\"),   count = c(3, 1, 2, 1, 1),   score = c(0.9, 0.8, 0.7, 0.95, 0.85) ) result <- fill_missing_classes(   dt = dt,   key_cols = c(\"file\", \"frame\", \"object_class\"),   fill_col = \"object_class\",   cols_0count = c(\"count\", \"score\"),   required_values = c(\"car\", \"person\", \"bicycle\") ) #> Duplicate column names found in molten data.table. Setting unique names using 'make.names' #> Error in setcolorder(dt, c(by.y, setdiff(names(dt), c(by.y, newend)),     newend)): nrow(x)[7]!=length(order)[8]"},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/get_killcurves.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Kill Curves from Cell Data â€” get_killcurves","title":"Generate Kill Curves from Cell Data â€” get_killcurves","text":"Processes summary imaging data ASCT calculate interpolate kill curves based PI (propidium iodide) staining. function extracts metadata filenames, calculates live/dead cell fractions, generates normalized interpolated kill curves.","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/get_killcurves.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Kill Curves from Cell Data â€” get_killcurves","text":"","code":"get_killcurves(   d,   well_info = list(well_data_or_path, wells_to_ignore),   file_info_pattern = list(split = \"_\", keep = c(1, 4, 5)),   fill_missing_counts = list(key_cols = c(\"file\", \"frame\", \"channel\", \"experiment\",     \"well\", \"field\", \"row\", \"col\"), count_cols = c(\"total_count\", \"pi_class_neg\",     \"pi_class_pos\", \"area_pineg\", \"area_pipos\", \"area_total\")),   group_killcurves_by = c(\"file\"),   max_time = 72,   n_frames = 29 )"},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/get_killcurves.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Kill Curves from Cell Data â€” get_killcurves","text":"d data.table containing cell tracking data required columns: timestep, frame, file, object_class, pi_class_pos, total_count file_info_pattern list components: split: Character used split filenames (default: \"_\") keep: Vector indices split elements keep (default: c(1, 4, 5)) fill_missing_counts list components: key_cols: Columns use keys filling missing data (default: c(\"file\", \"frame\", \"channel\", \"experiment\", \"well\", \"field\", \"row\", \"col\", \"well_info\")) count_cols: Count columns fill zeros (default: c(\"total_count\", \"pi_class_neg\", \"pi_class_pos\", \"area_pineg\", \"area_pipos\", \"area_total\")) group_killcurves_by Vector column names group calculating kill curves (default: c(\"file\")) max_time Maximum time point process hours (default: 72) n_frames Maximum number frames process (default: 29)","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/get_killcurves.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Kill Curves from Cell Data â€” get_killcurves","text":"data.table containing processed single-cell data calculated kill curves. Key added columns include: pi_frac: Fraction PI-positive (dead) cells live_frac: Fraction living cells (1 - pi_frac) interpolated_t: Interpolated time points interpolated_live_frac: Interpolated live cell fractions norm_live_frac: Normalized live cell fractions","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/get_killcurves.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Kill Curves from Cell Data â€” get_killcurves","text":"function performs following steps: Validates input data parameters Extracts experiment, well, field information filenames Fills missing data points needed Calculates PI-positive fractions (indicating dead cells) Derives live cell fractions Interpolates live cell fractions time Normalizes live cell fractions Enforces monotonic decrease live cell fraction (biological constraint)","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/get_killcurves.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Kill Curves from Cell Data â€” get_killcurves","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming 'cell_data' is a data.table with the required columns kill_curves <- get_killcurves(   d = cell_data,   max_time = 48,   n_frames = 25 ) } # }"},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/interpolate_variable.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpolate Variable â€” interpolate_variable","title":"Interpolate Variable â€” interpolate_variable","text":"function interpolates variable based given time points values. can handle regular irregular time steps, fill extreme values, return interpolated time points desired.","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/interpolate_variable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpolate Variable â€” interpolate_variable","text":"","code":"interpolate_variable(   time,   values,   timepoints,   fill_extremes = FALSE,   return_time = TRUE )"},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/interpolate_variable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpolate Variable â€” interpolate_variable","text":"time numeric vector time points. values numeric vector values corresponding time points. timepoints numeric difftime vector specifying desired time steps interpolation. fill_extremes logical value indicating whether fill extreme values (default: FALSE). return_time logical value indicating whether return interpolated time points (default: TRUE).","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/interpolate_variable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpolate Variable â€” interpolate_variable","text":"return_time TRUE, list two elements: interpolated_time (interpolated time points) interpolated_val (interpolated values). return_time FALSE, numeric vector interpolated values.","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/interpolate_variable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interpolate Variable â€” interpolate_variable","text":"","code":"time <- c(0, 1, 2, 3, 4, 5) values <- c(0, 1, 2, 3, 4, 5) interpolate_variable(time, values, timepoints = 0.5) #> $interpolated_time #>  [1] 0.0 0.5 1.0 1.5 2.0 2.5 3.0 3.5 4.0 4.5 5.0 #>  #> $interpolated_val #>  [1] 0.0 0.5 1.0 1.5 2.0 2.5 3.0 3.5 4.0 4.5 5.0 #>   time <- c(0, 1, 2, 4, 8) values <- c(0, 1, 2, 4, 8) interpolate_variable(time, values, timepoints = c(0, 1, 2, 1), fill_extremes = TRUE) #> $interpolated_time #> [1] 0 1 4 6 8 #>  #> $interpolated_val #> [1] 0 1 4 6 8 #>"},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/rename_well.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename Well Identifiers â€” rename_well","title":"Rename Well Identifiers â€” rename_well","text":"function renames well identifiers handle NIKON file naming conventions 1536-well plates. cases row goes beyond -Z, NIKON uses letters alphabet appendix \"0001\" (e.g., A_*_0001). improved data handling, cases changed ZA, ZB, .","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/rename_well.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename Well Identifiers â€” rename_well","text":"","code":"rename_well(well, file, omitted_rows = c(\"A\", \"B\"))"},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/rename_well.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename Well Identifiers â€” rename_well","text":"well Character vector well identifiers renamed. file Character vector file names associated well. omitted_rows Character vector row identifiers omitted renamed \"Z\" prefix (default: c(\"\", \"B\")).","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/rename_well.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename Well Identifiers â€” rename_well","text":"character vector renamed well identifiers.","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/rename_well.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename Well Identifiers â€” rename_well","text":"","code":"wells <- c(\"A01\", \"B02\", \"C03\", \"A01_0001_\", \"B02_0001_\") files <- c(\"file1.txt\", \"file2.txt\", \"file3.txt\", \"file4_0001_.txt\", \"file5_0001_.txt\") rename_well(wells, files) #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> [1] \"ZA1\" \"ZB2\" \"C3\"  \"ZA1\" \"ZB1\""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/render_QC.html","id":null,"dir":"Reference","previous_headings":"","what":"Render the QC report â€” render_QC","title":"Render the QC report â€” render_QC","text":"function renders QC report using template R/qc_report_template.Rmd.","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/render_QC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render the QC report â€” render_QC","text":"","code":"render_QC(path_to_data, report_name = NULL, template_file = NULL)"},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/render_QC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render the QC report â€” render_QC","text":"path_to_data path data file used report. report_name name report file. provided, report saved name path_to_data_qc_report.pdf. template_file path R Markdown template file. provided, default template package used.","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/theme_BoeckLab.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom ggplot2 Theme for BoeckLab â€” theme_BoeckLab","title":"Custom ggplot2 Theme for BoeckLab â€” theme_BoeckLab","text":"custom ggplot2 theme inspired publication style BoeckLab. theme provides clean professional look plots, options customize font size, font family, axis text angle, borders, legend position, facet spacing, plot margins.","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/theme_BoeckLab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom ggplot2 Theme for BoeckLab â€” theme_BoeckLab","text":"","code":"theme_BoeckLab(   base_size = 14,   base_family = \"Arial\",   x.text.angle = 0,   border = FALSE,   margin = TRUE,   legend = \"top\",   spacing = 0.5 )"},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/theme_BoeckLab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom ggplot2 Theme for BoeckLab â€” theme_BoeckLab","text":"base_size Numeric. base font size text elements. Default 14. base_family Character. base font family text elements. Default \"Arial\". x.text.angle Numeric. angle X-axis text labels. Default 0 (horizontal). border Logical. Whether add border around plot. Default FALSE. margin Logical. Whether add space multi-faceted plots. Default TRUE. legend Character. position legend. One \"top\", \"bottom\", \"left\", \"right\", \"none\". Default \"top\". spacing Numeric. spacing facets multi-faceted plot. Default 0.5.","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/theme_BoeckLab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Custom ggplot2 Theme for BoeckLab â€” theme_BoeckLab","text":"ggplot2 theme object.","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/theme_BoeckLab.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Custom ggplot2 Theme for BoeckLab â€” theme_BoeckLab","text":"","code":"library(ggplot2) p <- ggplot(mtcars, aes(x = wt, y = mpg)) + geom_point() p + theme_BoeckLab() #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database #> Warning: font family 'Arial' not found in PostScript font database"},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/theme_foundation.html","id":null,"dir":"Reference","previous_headings":"","what":"Foundation Theme â€” theme_foundation","title":"Foundation Theme â€” theme_foundation","text":"theme designed foundation build new themes, meant used directly. theme_foundation() complete theme minimal number elements defined. easier create new themes extending one rather theme_gray() theme_bw(), themes define elements deep hierarchy.","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/theme_foundation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Foundation Theme â€” theme_foundation","text":"","code":"theme_foundation(base_size = 12, base_family = \"\")"},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/theme_foundation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Foundation Theme â€” theme_foundation","text":"base_size base font size, given pts. base_family base font family","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/theme_foundation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Foundation Theme â€” theme_foundation","text":"theme takes theme_gray() sets colour fill values NULL, except top-level elements (line, rect, title), colour = \"black\", fill = \"white\". leaves spacing -non colour defaults default ggplot2 themes place. function adapted ggthemes package. See original source https://github.com/jrnold/ggthemes/blob/main/R/theme-foundation.R.","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/theme_plateview.html","id":null,"dir":"Reference","previous_headings":"","what":"Plate View Theme for ggplot2 â€” theme_plateview","title":"Plate View Theme for ggplot2 â€” theme_plateview","text":"function provides consistent theme plate view plots ggplot2. sets scales, labels, theme elements plate view visualization.","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/theme_plateview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plate View Theme for ggplot2 â€” theme_plateview","text":"","code":"theme_plateview(   col_var,   row_var,   col_lab = \"Column\",   row_lab = \"Row\",   fill_lab = NULL,   title = NULL,   subtitle = NULL,   base_size = 12,   base_family = \"\" )"},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/theme_plateview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plate View Theme for ggplot2 â€” theme_plateview","text":"col_var variable representing plate columns. row_var variable representing plate rows. col_lab label x-axis (plate columns). Default \"Column\". row_lab label y-axis (plate rows). Default \"Row\". fill_lab label fill aesthetic. Default NULL. title title plot. Default NULL. subtitle subtitle plot. Default NULL.","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/theme_plateview.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plate View Theme for ggplot2 â€” theme_plateview","text":"list ggplot2 theme elements added ggplot object.","code":""},{"path":"https://phisanti.github.io/BoeckLabRtools/reference/theme_plateview.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plate View Theme for ggplot2 â€” theme_plateview","text":"","code":"library(ggplot2) # Create dummy data data <- data.frame(   row = rep(LETTERS[1:8], each = 12),   col = rep(1:12, 8),   value = runif(96) ) ggplot(data, aes(x = col, y = row, fill = value)) +   geom_tile() +   theme_plateview(col_var = data$col, row_var = data$row,                   fill_lab = \"Value\", title = \"Plate View Plot\")"}]
