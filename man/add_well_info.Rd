% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_well_info.R
\name{add_well_info}
\alias{add_well_info}
\title{Merge plate information with well information}
\usage{
add_well_info(
  d,
  well_info,
  info_name = "well_info",
  plate_format = "plate_view",
  wells_to_ignore = c("EMPTY", "BW"),
  force_lower = TRUE,
  inplace = TRUE
)
}
\arguments{
\item{d}{A data.table of path to csv containing the well information. It must have columns named "row", "col", and "well" (all lowercase).}

\item{well_info}{A data.frame, data.table or path to csv containing the well information. The format depends on the \code{plate_format} argument.}

\item{info_name}{A character string specifying the name of the column containing the well information. Default is "well_info".}

\item{plate_format}{A character string specifying the format of the well information. Can be either "plate_view" (default) or "transposed".}

\item{wells_to_ignore}{A character vector specifying the wells to ignore. Default is c("EMPTY", "BW").}

\item{force_lower}{A logical value indicating whether to force column names to lowercase. Default is TRUE.}

\item{inplace}{A logical value indicating whether to modify the input data.table in place. Default is TRUE. This means the data.table given
as input will be directly modified without using the assignment operator '<-'.}
}
\value{
A data.table with the merged drug data and well information.
}
\description{
This function is designed to add well-specific information from plate experiments (e.g., 96-well, 384-well, or 1536-well plates) to your data.
It merges a dataset containing plate data with well information based on the specified plate format. The function provides a flexible way to
integrate metadata about plate wells (such as drug types, concentrations, or experimental conditions) with plate measurement data.
}
\details{
The function requires a consistent mapping between the row/col/well coordinates in both the metadata file and the target data. The coordinates
must use the same labeling scheme in both datasets for proper merging. For example, if your plate uses rows A-H and columns 1-12 (for a 96-well plate),
both datasets should follow this labeling pattern.

When using the default 'plate_view' format, the input well_info data should visually resemble the physical plate layout:
\itemize{
\item The first column must be labeled "row" and contain row identifiers (e.g., A, B, C, etc.)
\item The subsequent columns must be numeric and represent column numbers (e.g., 1, 2, 3, etc.)
\item The cell values contain the information to be merged (e.g., drug names, concentrations)
}

For example, a 96-well plate metadata might look like:
row | 1      | 2      | 3      | ... | 12
----+--------+--------+--------+-----+--------
A   | Drug1  | Drug2  | Ctrl   | ... | Drug6
B   | Drug1  | Drug2  | Ctrl   | ... | Drug6
...
H   | Drug7  | Drug8  | Blank  | ... | Blank

Alternatively, the 'transposed' format can be used when the metadata is structured in a tabular form with columns for row, col, and the information.
}
\examples{
# Example data
library(data.table)
library(BoeckLabRtools)
d <- read.table(text = "
row | col | well | value
A   | 1   | A1   | 10
A   | 2   | A2   | 20
B   | 1   | B1   | 30
B   | 2   | B2   | 40", 
header = TRUE, sep = "|", stringsAsFactors = FALSE, strip.white = TRUE)
d <- data.table(d)
well_info <- read.table(text = "
row | 1     | 2
A   | Drug1 | Drug2
B   | Drug3 | Drug4", 
header = TRUE, sep = "|", stringsAsFactors = FALSE, strip.white = TRUE)
well_info <- data.table::data.table(well_info)
# Merge drug data with well information
merged_data <- add_well_info(d, well_info)
# Merge drug data with transposed well information
well_info_transposed <- read.table(text = "
col | row | info
1   | A | Drug1
2   | B | Drug2
1   | A | Drug3
2   | B | Drug4", 
header = TRUE, sep = "|", stringsAsFactors = FALSE, strip.white = TRUE)
well_info_transposed <- data.table::data.table(well_info_transposed)
well_info_transposed[, well := paste0(row, col)]
merged_data_transposed <- add_well_info(d, well_info_transposed, plate_format = "transposed")

}
